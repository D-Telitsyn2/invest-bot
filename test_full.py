#!/usr/bin/env python3
"""
–ü–æ–ª–Ω–æ–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –≤—Å–µ—Ö –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤ –±–æ—Ç–∞
"""

import asyncio
import os
from dotenv import load_dotenv
from database import init_db, create_user, get_user_portfolio, save_order
from gpt_client import GPTClient
from tinkoff_client import TinkoffClient

async def test_full_bot():
    print("ü§ñ –ü–æ–ª–Ω–æ–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ Invest Bot")
    print("=" * 50)

    # –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
    load_dotenv()

    # 1. –¢–µ—Å—Ç –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
    print("üìÅ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö...")
    await init_db()

    test_user_id = 987654321
    await create_user(test_user_id, "test_user", "Test User")
    print("‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å–æ–∑–¥–∞–Ω—ã")

    # 2. –¢–µ—Å—Ç GPT –∫–ª–∏–µ–Ω—Ç–∞
    print("\nüß† –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ GPT –∫–ª–∏–µ–Ω—Ç–∞...")
    gpt_client = GPTClient()

    try:
        ideas = await gpt_client.get_investment_ideas(budget=100000, risk_level="high")
        print(f"‚úÖ –ü–æ–ª—É—á–µ–Ω–æ {len(ideas)} –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏–æ–Ω–Ω—ã—Ö –∏–¥–µ–π")

        for i, idea in enumerate(ideas[:2], 1):
            print(f"  {i}. {idea['ticker']} - {idea['action']} –ø–æ {idea['price']} ‚ÇΩ")

        # –ê–Ω–∞–ª–∏–∑ –∞–∫—Ü–∏–∏
        analysis = await gpt_client.analyze_stock("SBER")
        print(f"‚úÖ –ê–Ω–∞–ª–∏–∑ SBER: {analysis.get('recommendation', 'DEMO')}")

    except Exception as e:
        print(f"‚ö†Ô∏è  GPT –∫–ª–∏–µ–Ω—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç –≤ –¥–µ–º–æ-—Ä–µ–∂–∏–º–µ: {e}")

    # 3. –¢–µ—Å—Ç Tinkoff –∫–ª–∏–µ–Ω—Ç–∞
    print("\nüìà –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ Tinkoff –∫–ª–∏–µ–Ω—Ç–∞...")
    tinkoff_client = TinkoffClient()

    try:
        # –ü–æ–ª—É—á–µ–Ω–∏–µ —Ü–µ–Ω
        price_sber = await tinkoff_client.get_price("SBER")
        price_gazp = await tinkoff_client.get_price("GAZP")
        print(f"‚úÖ –¶–µ–Ω—ã –ø–æ–ª—É—á–µ–Ω—ã: SBER={price_sber}‚ÇΩ, GAZP={price_gazp}‚ÇΩ")

        # –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ —Å–¥–µ–ª–∫–∏
        order_result = await tinkoff_client.place_order("SBER", 5, price_sber, "BUY")
        print(f"‚úÖ –ó–∞—è–≤–∫–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∞: {order_result.get('order_id', 'DEMO')}")

    except Exception as e:
        print(f"‚ö†Ô∏è  Tinkoff –∫–ª–∏–µ–Ω—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç –≤ –¥–µ–º–æ-—Ä–µ–∂–∏–º–µ: {e}")

    # 4. –¢–µ—Å—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —Å–¥–µ–ª–∫–∏
    print("\nüíæ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —Å–¥–µ–ª–∫–∏...")
    saved = await save_order(
        user_id=test_user_id,
        ticker="SBER",
        quantity=5,
        price=280.50,
        order_type="BUY",
        total_amount=5 * 280.50,
        order_id="TEST_ORDER_001"
    )

    if saved:
        print("‚úÖ –°–¥–µ–ª–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö")
    else:
        print("‚ùå –û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —Å–¥–µ–ª–∫–∏")

    # 5. –¢–µ—Å—Ç –ø–æ—Ä—Ç—Ñ–µ–ª—è
    print("\nüíº –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ—Ä—Ç—Ñ–µ–ª—è...")
    portfolio = await get_user_portfolio(test_user_id)

    if portfolio:
        print("‚úÖ –ü–æ—Ä—Ç—Ñ–µ–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:")
        total_value = 0
        for position in portfolio:
            value = position['current_value']
            total_value += value
            print(f"  {position['ticker']}: {position['quantity']} —à—Ç. = {value:.2f} ‚ÇΩ")
        print(f"  –û–±—â–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å: {total_value:.2f} ‚ÇΩ")
    else:
        print("‚ö†Ô∏è  –ü–æ—Ä—Ç—Ñ–µ–ª—å –ø—É—Å—Ç")

    # 6. –ü—Ä–æ–≤–µ—Ä–∫–∞ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ –∫ –ø—Ä–æ–¥–∞–∫—à–µ–Ω—É
    print("\nüéØ –ü—Ä–æ–≤–µ—Ä–∫–∞ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ –∫ –ø—Ä–æ–¥–∞–∫—à–µ–Ω—É...")

    telegram_token = os.getenv('TELEGRAM_BOT_TOKEN')
    openai_key = os.getenv('OPENAI_API_KEY')
    tinkoff_token = os.getenv('TINKOFF_TOKEN')

    print(f"  Telegram Bot Token: {'‚úÖ' if telegram_token else '‚ùå'}")
    print(f"  OpenAI API Key: {'‚úÖ' if openai_key else '‚ùå'}")
    print(f"  Tinkoff Token: {'‚úÖ' if tinkoff_token else '‚ùå'}")

    if telegram_token and openai_key and tinkoff_token:
        print("\nüöÄ –ë–æ—Ç –≥–æ—Ç–æ–≤ –∫ –∑–∞–ø—É—Å–∫—É –≤ –ø—Ä–æ–¥–∞–∫—à–µ–Ω–µ!")
        print("–í—ã–ø–æ–ª–Ω–∏—Ç–µ: python main.py")
    else:
        print("\n‚ö†Ô∏è  –î–ª—è –ø–æ–ª–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏ –¥–æ–±–∞–≤—å—Ç–µ –Ω–µ–¥–æ—Å—Ç–∞—é—â–∏–µ —Ç–æ–∫–µ–Ω—ã –≤ .env —Ñ–∞–π–ª")

    print("\n" + "=" * 50)
    print("‚úÖ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ!")

if __name__ == "__main__":
    asyncio.run(test_full_bot())
