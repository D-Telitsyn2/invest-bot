#!/usr/bin/env python3
"""
–¢–µ—Å—Ç GPT-4 –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ —Å —Ä–µ–∞–ª—å–Ω—ã–º API –∫–ª—é—á–æ–º
"""

import asyncio
import os
from dotenv import load_dotenv
from gpt_client import GPTClient

async def test_gpt_integration():
    print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ GPT-4 –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏...")

    # –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
    load_dotenv()

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ API –∫–ª—é—á–∞
    api_key = os.getenv('OPENAI_API_KEY')
    if not api_key:
        print("‚ùå OPENAI_API_KEY –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ .env —Ñ–∞–π–ª–µ")
        return

    print(f"‚úÖ API –∫–ª—é—á –Ω–∞–π–¥–µ–Ω: {api_key[:20]}...")

    # –°–æ–∑–¥–∞–µ–º –∫–ª–∏–µ–Ω—Ç
    gpt_client = GPTClient()

    try:
        print("\nüí° –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏–æ–Ω–Ω—ã—Ö –∏–¥–µ–π –æ—Ç GPT-4...")
        ideas = await gpt_client.get_investment_ideas(budget=50000, risk_level="medium")

        print(f"‚úÖ –ü–æ–ª—É—á–µ–Ω–æ {len(ideas)} –∏–¥–µ–π:")
        for i, idea in enumerate(ideas, 1):
            print(f"  {i}. {idea.get('ticker', 'N/A')} - {idea.get('action', 'N/A')} –ø–æ {idea.get('price', 'N/A')} ‚ÇΩ")
            print(f"     {idea.get('reasoning', 'N/A')[:80]}...")

        print("\nüìä –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∞–Ω–∞–ª–∏–∑–∞ –∞–∫—Ü–∏–∏...")
        analysis = await gpt_client.analyze_stock("SBER")

        print(f"‚úÖ –ê–Ω–∞–ª–∏–∑ SBER:")
        print(f"  –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è: {analysis.get('recommendation', 'N/A')}")
        print(f"  –¶–µ–ª–µ–≤–∞—è —Ü–µ–Ω–∞: {analysis.get('target_price', 'N/A')} ‚ÇΩ")
        print(f"  –£—Ä–æ–≤–µ–Ω—å —Ä–∏—Å–∫–∞: {analysis.get('risk_level', 'N/A')}")
        print(f"  –ê–Ω–∞–ª–∏–∑: {analysis.get('analysis', 'N/A')[:100]}...")

    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–∞–±–æ—Ç–µ —Å GPT-4: {e}")

    print("\nüéâ –¢–µ—Å—Ç –∑–∞–≤–µ—Ä—à–µ–Ω!")

if __name__ == "__main__":
    asyncio.run(test_gpt_integration())
