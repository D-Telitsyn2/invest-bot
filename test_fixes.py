#!/usr/bin/env python3
"""
–¢–µ—Å—Ç –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–π –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —á—Ç–æ –≤—Å–µ —Ä–∞–±–æ—Ç–∞–µ—Ç –ø—Ä–∞–≤–∏–ª—å–Ω–æ
"""
import asyncio
import logging
from gpt_client import XAIClient

logging.basicConfig(level=logging.INFO)

async def test_ideas_format():
    """–¢–µ—Å—Ç —Ñ–æ—Ä–º–∞—Ç–∞ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º—ã—Ö –∏–¥–µ–π"""
    print("üß™ –¢–µ—Å—Ç–∏—Ä—É–µ–º –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è...")

    xai_client = XAIClient()
    try:
        ideas = await xai_client.get_investment_ideas(budget=50000, risk_level="medium")

        if not ideas:
            print("‚ùå –ù–µ—Ç –∏–¥–µ–π –æ—Ç xAI")
            return

        print(f"‚úÖ –ü–æ–ª—É—á–µ–Ω–æ {len(ideas)} –∏–¥–µ–π")

        for i, idea in enumerate(ideas[:3], 1):
            print(f"\n--- –ò–¥–µ—è {i} ---")
            print(f"–¢–∏–∫–µ—Ä: {idea.get('ticker', 'N/A')}")
            print(f"–¶–µ–Ω–∞: {idea.get('price', 'N/A')} ‚ÇΩ")
            print(f"–¶–µ–ª–µ–≤–∞—è —Ü–µ–Ω–∞: {idea.get('target_price', 'N/A')} ‚ÇΩ")
            print(f"–î–µ–π—Å—Ç–≤–∏–µ: {idea.get('action', 'N/A')}")
            print(f"–û–±–æ—Å–Ω–æ–≤–∞–Ω–∏–µ: {idea.get('reasoning', 'N/A')[:100]}...")

            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –≤—Å–µ –æ—Å–Ω–æ–≤–Ω—ã–µ –ø–æ–ª—è –ø—Ä–∏—Å—É—Ç—Å—Ç–≤—É—é—Ç
            required_fields = ['ticker', 'price', 'target_price', 'action', 'reasoning']
            missing = [field for field in required_fields if not idea.get(field)]

            if missing:
                print(f"‚ö†Ô∏è –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –ø–æ–ª—è: {missing}")
            else:
                print("‚úÖ –í—Å–µ –ø–æ–ª—è –ø—Ä–∏—Å—É—Ç—Å—Ç–≤—É—é—Ç")

    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")

if __name__ == "__main__":
    asyncio.run(test_ideas_format())
