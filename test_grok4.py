#!/usr/bin/env python3
"""
–¢–µ—Å—Ç –Ω–æ–≤—ã—Ö –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–µ–π Grok-4 —Å —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏–º–∏ –¥–∞–Ω–Ω—ã–º–∏
"""

import asyncio
import json
from gpt_client import XAIClient

async def test_grok4_technical_analysis():
    """–¢–µ—Å—Ç–∏—Ä—É–µ–º –Ω–æ–≤—ã–π —Ñ–æ—Ä–º–∞—Ç –æ—Ç–≤–µ—Ç–∞ —Å —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏–º–∏ –¥–∞–Ω–Ω—ã–º–∏"""

    print("üî¨ –¢–µ—Å—Ç–∏—Ä—É–µ–º Grok-4 —Å —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏–º–∏ –¥–∞–Ω–Ω—ã–º–∏...")

    client = XAIClient()
    print(f"üìã –î–æ—Å—Ç—É–ø–Ω—ã–µ –º–æ–¥–µ–ª–∏: {client.models}")
    print(f"üéØ –ü–µ—Ä–≤–∞—è –º–æ–¥–µ–ª—å (–ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–Ω–∞—è): {client.models[0]}")

    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–ª—É—á–µ–Ω–∏–µ –∏–¥–µ–π
    try:
        ideas = await client.get_investment_ideas(budget=50000, risk_level="medium")

        if ideas:
            print(f"\n‚úÖ –ü–æ–ª—É—á–µ–Ω–æ {len(ideas)} –∏–¥–µ–π")

            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–µ—Ä–≤—É—é –∏–¥–µ—é –Ω–∞ –Ω–∞–ª–∏—á–∏–µ –Ω–æ–≤—ã—Ö –ø–æ–ª–µ–π
            first_idea = ideas[0]
            print(f"\nüìä –ü—Ä–∏–º–µ—Ä –∏–¥–µ–∏ ({first_idea.get('ticker', 'N/A')}):")

            fields_to_check = [
                'current_price', 'target_price', 'support_level',
                'resistance_level', 'trend', 'reasoning'
            ]

            for field in fields_to_check:
                value = first_idea.get(field, '–ù–ï–¢')
                print(f"  {field}: {value}")

            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ Grok-4 –¥–∞–µ—Ç –±–æ–ª–µ–µ –¥–µ—Ç–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
            has_technical = any(first_idea.get(field) for field in ['support_level', 'resistance_level', 'trend'])

            if has_technical:
                print("\nüéØ ‚úÖ –¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ –¥–∞–Ω–Ω—ã–µ —É—Å–ø–µ—à–Ω–æ –ø–æ–ª—É—á–µ–Ω—ã –æ—Ç Grok-4!")
            else:
                print("\n‚ö†Ô∏è –¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ –¥–∞–Ω–Ω—ã–µ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã, –≤–æ–∑–º–æ–∂–Ω–æ —Å—Ç–∞—Ä–∞—è –º–æ–¥–µ–ª—å")

        else:
            print("‚ùå –ò–¥–µ–∏ –Ω–µ –ø–æ–ª—É—á–µ–Ω—ã")

    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")

if __name__ == "__main__":
    asyncio.run(test_grok4_technical_analysis())
