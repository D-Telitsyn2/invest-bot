#!/usr/bin/env python3
"""
–ü—Ä–æ—Å—Ç–æ–π —Ç–µ—Å—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
"""
import asyncio
import os
from dotenv import load_dotenv

async def test_db_connection():
    """–ü—Ä–æ—Å—Ç–æ–π —Ç–µ—Å—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –ë–î"""
    print("=== –¢–ï–°–¢ –ü–û–î–ö–õ–Æ–ß–ï–ù–ò–Ø –ö –ë–î ===")

    # –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
    load_dotenv()

    db_url = os.getenv('DATABASE_URL')
    if not db_url:
        print("‚ùå DATABASE_URL –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è")
        return

    print(f"‚úÖ DATABASE_URL –Ω–∞–π–¥–µ–Ω: {db_url[:50]}...")

    try:
        import asyncpg
        print("‚úÖ asyncpg –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω")

        # –ü—Ä–æ–±—É–µ–º –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ –±–∞–∑–µ
        conn = await asyncpg.connect(db_url)
        print("‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –ë–î —É—Å–ø–µ—à–Ω–æ")

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–∞–±–ª–∏—Ü—ã
        tables = await conn.fetch("SELECT table_name FROM information_schema.tables WHERE table_schema = 'public'")
        print(f"üìä –ù–∞–π–¥–µ–Ω–æ —Ç–∞–±–ª–∏—Ü: {len(tables)}")
        for table in tables:
            print(f"   - {table['table_name']}")

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
        if any(t['table_name'] == 'users' for t in tables):
            users_count = await conn.fetchval("SELECT COUNT(*) FROM users")
            print(f"üë• –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –≤ –ë–î: {users_count}")

        if any(t['table_name'] == 'user_settings' for t in tables):
            settings_count = await conn.fetchval("SELECT COUNT(*) FROM user_settings")
            print(f"‚öôÔ∏è –ó–∞–ø–∏—Å–µ–π –Ω–∞—Å—Ç—Ä–æ–µ–∫: {settings_count}")

            # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
            if settings_count > 0:
                settings = await conn.fetch("""
                    SELECT u.telegram_id, u.username, s.notifications, s.daily_market_analysis
                    FROM users u
                    JOIN user_settings s ON u.telegram_id = s.user_id
                """)
                print(f"\nüìã –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π:")
                for row in settings:
                    print(f"   {row['telegram_id']} (@{row['username'] or 'no_username'}): "
                          f"notifications={row['notifications']}, daily={row['daily_market_analysis']}")

        await conn.close()
        print("‚úÖ –°–æ–µ–¥–∏–Ω–µ–Ω–∏–µ –∑–∞–∫—Ä—ã—Ç–æ")

    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        import traceback
        traceback.print_exc()

if __name__ == "__main__":
    asyncio.run(test_db_connection())
