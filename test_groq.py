#!/usr/bin/env python3
"""
–¢–µ—Å—Ç xAI API –¥–ª—è –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏–æ–Ω–Ω–æ–≥–æ –±–æ—Ç–∞
"""

import asyncio
import os
import sys
from dotenv import load_dotenv

# –î–æ–±–∞–≤–ª—è–µ–º —Ç–µ–∫—É—â—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –≤ –ø—É—Ç—å
sys.path.append('/root/invest-bot')

load_dotenv()

async def test_xai():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ xAI API"""

    print("ü§ñ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ xAI Grok API...")
    print("=" * 50)

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º API –∫–ª—é—á
    api_key = os.getenv('XAI_API_KEY')
    if not api_key or api_key == 'your_xai_api_key_here':
        print("‚ùå xAI API –∫–ª—é—á –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω!")
        print("üìã –î–æ–±–∞–≤—å—Ç–µ –∫–ª—é—á –≤ .env —Ñ–∞–π–ª")
        return

    print(f"‚úÖ API –∫–ª—é—á –Ω–∞–π–¥–µ–Ω: {api_key[:10]}...")

    try:
        from gpt_client import XAIClient

        client = XAIClient()
        print("‚úÖ XAIClient —Å–æ–∑–¥–∞–Ω —É—Å–ø–µ—à–Ω–æ")

        # –¢–µ—Å—Ç –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏–æ–Ω–Ω—ã—Ö –∏–¥–µ–π
        print("\nüí° –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏–æ–Ω–Ω—ã–µ –∏–¥–µ–∏ –æ—Ç Grok...")
        ideas = await client.get_investment_ideas(budget=50000, risk_level="medium")

        if ideas:
            print(f"‚úÖ –ü–æ–ª—É—á–µ–Ω–æ {len(ideas)} –∏–¥–µ–π –æ—Ç xAI Grok!")
            print("\nüìä –†–µ–∑—É–ª—å—Ç–∞—Ç—ã:")
            print("-" * 40)

            for i, idea in enumerate(ideas, 1):
                ticker = idea.get('ticker', 'N/A')
                action = idea.get('action', 'N/A')
                price = idea.get('price', 0)
                target = idea.get('target_price', 0)
                reasoning = idea.get('reasoning', 'N/A')[:60] + "..."

                print(f"{i}. {ticker} - {action}")
                print(f"   üí∞ {price} ‚ÇΩ ‚Üí üéØ {target} ‚ÇΩ")
                print(f"   üìù {reasoning}")
                print()

            print("üéâ xAI Grok API —Ä–∞–±–æ—Ç–∞–µ—Ç –æ—Ç–ª–∏—á–Ω–æ!")
            print("ÔøΩ –ò—Å–ø–æ–ª—å–∑—É–µ–º –≤–∞—à –æ–ø–ª–∞—á–µ–Ω–Ω—ã–π –∞–∫–∫–∞—É–Ω—Ç ($5)")

        else:
            print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∏–¥–µ–∏")
            print("üí° –í–æ–∑–º–æ–∂–Ω–æ, –ø—Ä–µ–≤—ã—à–µ–Ω –ª–∏–º–∏—Ç –∏–ª–∏ API –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω")

    except ImportError as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞: {e}")
        print("üîß –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏: pip install -r requirements.txt")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        print("üîç –ü—Ä–æ–≤–µ—Ä—å—Ç–µ API –∫–ª—é—á –∏ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç-—Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ")

async def test_analysis():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∞–Ω–∞–ª–∏–∑–∞ –∞–∫—Ü–∏–π"""
    print("\nüîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∞–Ω–∞–ª–∏–∑–∞ –∞–∫—Ü–∏–π...")

    try:
        from gpt_client import XAIClient

        client = XAIClient()
        result = await client.analyze_stock("SBER")

        if result and 'error' not in result:
            print("‚úÖ –ê–Ω–∞–ª–∏–∑ –∞–∫—Ü–∏–π —Ä–∞–±–æ—Ç–∞–µ—Ç!")
            print(f"üìä {result.get('ticker')}: {result.get('recommendation')}")
            print(f"üéØ –¶–µ–ª—å: {result.get('target_price')} ‚ÇΩ")
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ –∞–Ω–∞–ª–∏–∑–∞: {result.get('error', 'Unknown')}")

    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∞–Ω–∞–ª–∏–∑–∞: {e}")

if __name__ == "__main__":
    print("üöÄ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤ xAI Grok API...")
    asyncio.run(test_xai())
    asyncio.run(test_analysis())
    print("\n‚úÖ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!")