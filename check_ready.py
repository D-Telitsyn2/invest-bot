#!/usr/bin/env python3
"""
–§–∏–Ω–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ –±–æ—Ç–∞ –∫ —Ä–∞–±–æ—Ç–µ
"""

import os
import sys
from pathlib import Path

def check_files():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è –≤—Å–µ—Ö –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö —Ñ–∞–π–ª–æ–≤"""
    required_files = [
        'main.py', 'handlers.py', 'gpt_client.py',
        'database.py', 'scheduler.py', 'config.py', 'requirements.txt',
        '.env', 'README.md'
    ]

    missing_files = []
    for file in required_files:
        if not Path(file).exists():
            missing_files.append(file)

    return missing_files

def check_env():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è"""
    from dotenv import load_dotenv
    load_dotenv()

    required_vars = ['OPENAI_API_KEY']
    optional_vars = ['TELEGRAM_BOT_TOKEN']

    env_status = {}
    for var in required_vars + optional_vars:
        value = os.getenv(var)
        env_status[var] = {
            'present': bool(value),
            'required': var in required_vars
        }

    return env_status

def main():
    print("üîç –§–∏–Ω–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ Invest Bot")
    print("=" * 40)

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–∞–π–ª–æ–≤
    missing_files = check_files()
    if missing_files:
        print(f"‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç —Ñ–∞–π–ª—ã: {', '.join(missing_files)}")
        return False
    else:
        print("‚úÖ –í—Å–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ —Ñ–∞–π–ª—ã –ø—Ä–∏—Å—É—Ç—Å—Ç–≤—É—é—Ç")

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
    env_status = check_env()
    print("\nüîë –°—Ç–∞—Ç—É—Å –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è:")

    all_required_present = True
    for var, status in env_status.items():
        icon = "‚úÖ" if status['present'] else ("‚ùå" if status['required'] else "‚ö†Ô∏è")
        req_text = "(–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ)" if status['required'] else "(–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)"
        print(f"  {icon} {var} {req_text}")

        if status['required'] and not status['present']:
            all_required_present = False

    # –ò—Ç–æ–≥–æ–≤—ã–π —Å—Ç–∞—Ç—É—Å
    print("\n" + "=" * 40)
    if all_required_present:
        print("üéâ –ë–æ—Ç –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ!")
        print("\nüìã –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:")
        print("1. –î–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è: python demo.py")
        print("2. –î–ª—è –ø–æ–ª–Ω–æ–≥–æ —Ç–µ—Å—Ç–∞: python test_full.py")
        if env_status['TELEGRAM_BOT_TOKEN']['present']:
            print("3. –î–ª—è –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞: python main.py")
        else:
            print("3. –î–æ–±–∞–≤—å—Ç–µ TELEGRAM_BOT_TOKEN –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞")

        return True
    else:
        print("‚ùå –ù–µ–æ–±—Ö–æ–¥–∏–º–æ –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è")
        return False

if __name__ == "__main__":
    success = main()
    sys.exit(0 if success else 1)
